// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "./utils/PCCSSetupBase.sol";
import "./utils/RiscZeroSetup.sol";
import {Groth16Setup} from "./utils/succinct/Groth16Setup.sol";
import {PlonkSetup} from "./utils/succinct/PlonkSetup.sol";
import {ISP1Verifier} from "@sp1-contracts/ISP1Verifier.sol";

import "../contracts/PCCSRouter.sol";
import "../contracts/AutomataDcapAttestationFee.sol";
import "../contracts/verifiers/V4QuoteVerifier.sol";

contract AutomataDcapZkTest is PCCSSetupBase, RiscZeroSetup {
    AutomataDcapAttestationFee attestation;
    V4QuoteVerifier quoteVerifier;
    PCCSRouter pccsRouter;

    Groth16Setup setupSp1Groth16 = new Groth16Setup();
    PlonkSetup setupSp1Plonk = new PlonkSetup();

    bytes32 riscZeroImageId = 0x4cf071b3cc25d73e77f430b65f5700dd53522dacc21c1bfc0862b2e46fda3584;
    bytes32 sp1DcapVkey = 0x0021feaf3f6c78429dac7756fac5cfed39b606e34603443409733e13a1cf06cc;

    bytes constant sampleQuote =
        hex"";

    function setUp() public override {
        super.setUp();

        setUpRiscZero();
        vm.startPrank(admin);

        pccsRouter = setupPccsRouter(admin);
        
        pcsDaoUpserts();
        
        enclaveIdDao.grantRoles(
            admin,
            enclaveIdDao.ATTESTER_ROLE()
        );
        qeIdDaoUpsert(4, "/forge-test/assets/0625/qe_td.json");

        fmspcTcbDao.grantRoles(
            admin,
            fmspcTcbDao.ATTESTER_ROLE()
        );
        fmspcTcbDaoUpsert("/forge-test/assets/0625/tcbinfov3_90C06F000000.json");
        tcbEvalDaoUpsert("/forge-test/assets/0625/tdxtcbeval.json");

        attestation = new AutomataDcapAttestationFee(admin);
        quoteVerifier = new V4QuoteVerifier(P256_VERIFIER, address(pccsRouter));
        attestation.setQuoteVerifier(address(quoteVerifier));

        vm.stopPrank();
    }

    function testRiscZeroGroth16Verification() public {
        vm.prank(admin);
        attestation.setZkConfiguration(
            ZkCoProcessorType.RiscZero,
            ZkCoProcessorConfig({latestDcapProgramIdentifier: riscZeroImageId, defaultZkVerifier: address(riscZeroVerifier)})
        );

        bytes memory journal =
            hex"02550004810000000790c06f000000040102000000000000000000000000009790d89a10210ec6968a773cee2ca05b5aa97309f36727a968527be4606fc19e6f73acce350946c9d46a9bf7a63f843000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000080e702060000000000f2dd2696f69b950645832bdc095ffd11247eeff687eeacdb57a58d2ddb9a9f94fea40c961e19460c00ffa31420ecbc180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000998204508d58dcbfebe5e11c48669f7a921ac2da744dfb7d014ecdff2acdff1c9f665fdad52aadacf296a1df9909eb2383d100224f1716aeb431f7cb3cf028197dbd872487f27b0f6329ab17647dc9953c7014109818634f879e6550bc60f93eecfc42ff4d49278bfdbb0c77e570f4490cff10a2ee1ac11fbd2c2b49fa6cfa3cf1a1cb755c72522dd8a689e9d47906a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000278e753482976c8a7351fe2113609c7350d491cdae3d449eefc202fa41b2ad6840239cc2ba084c2d594b4e6dabeae0fcbf71c96daf0d0c9ecf0e9810c045790000000000684112bcd13640a487f29bfe9f18245f06947322bc225541c05b27da6c65a17ff486b948a7fa01fc7a25a72b367cd8bd6aed0bb37108920a3292f557465b91fac3a68eb10fa74a3f32c80b978c8ad671395dabf24283eef9091bc3919fd39b9915a87f1a5c939ffcb58648463f420bffe0c03e3580331c42fc4d48dbe05ae881cb4b1c1188b0758c525b2f28ee1896907de49511ffb1d919b04bd65b91943be6ebb0a5fe8476fa44b3f6223eed544e8908e9b0122afd8ef25db00eee78e8a850c51cf8a0";
        bytes memory seal =
            hex"f536085a2cb643e8cc81e333e8ab55b86bcf2347e79614b06680477abdf44774ee675c6421912de538c1ffca8667eda91fc3ca4106eb5e7617876cde5ce494f73e53cbd306590dea40712e11101dba6334663faf9abb1573d573a6be6131b2d3e0c969632a5035c33edbd95a4ebef0496b4ae4a2067da58818834c56cb705de044f78c500ada11068f3e19b2a52add6f82d3b777c58ff33ad49cb64e0756d7f33436df6c20227f584f745d74a348377dc66084897a40993331c228ab776b1370258628181602bbfce7eb34995f171ace84ddfef7e965cee312daa700b4ab86c325e971321a7f55ccb42b0e27fe9ff089fa228d151d6e47e33f0e986833c361d2343a243e";

        (bool success,) =
            attestation.verifyAndAttestWithZKProof(journal, ZkCoProcessorType.RiscZero, seal);

        assertTrue(success);
    }

    function testSP1Groth16Verification() public {
        ISP1Verifier sp1Groth16Verifier = ISP1Verifier(setupSp1Groth16.setup());

        vm.prank(admin);
        attestation.setZkConfiguration(
            ZkCoProcessorType.Succinct,
            ZkCoProcessorConfig({latestDcapProgramIdentifier: sp1DcapVkey, defaultZkVerifier: address(sp1Groth16Verifier)})
        );

        bytes memory output =
            hex"02550004810000000790c06f000000040102000000000000000000000000009790d89a10210ec6968a773cee2ca05b5aa97309f36727a968527be4606fc19e6f73acce350946c9d46a9bf7a63f843000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000080e702060000000000f2dd2696f69b950645832bdc095ffd11247eeff687eeacdb57a58d2ddb9a9f94fea40c961e19460c00ffa31420ecbc180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000998204508d58dcbfebe5e11c48669f7a921ac2da744dfb7d014ecdff2acdff1c9f665fdad52aadacf296a1df9909eb2383d100224f1716aeb431f7cb3cf028197dbd872487f27b0f6329ab17647dc9953c7014109818634f879e6550bc60f93eecfc42ff4d49278bfdbb0c77e570f4490cff10a2ee1ac11fbd2c2b49fa6cfa3cf1a1cb755c72522dd8a689e9d47906a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000278e753482976c8a7351fe2113609c7350d491cdae3d449eefc202fa41b2ad6840239cc2ba084c2d594b4e6dabeae0fcbf71c96daf0d0c9ecf0e9810c04579000000000067b006b4d13640a487f29bfe9f18245f06947322bc225541c05b27da6c65a17ff486b948a7fa01fc7a25a72b367cd8bd6aed0bb37108920a3292f557465b91fac3a68eb10fa74a3f32c80b978c8ad671395dabf24283eef9091bc3919fd39b9915a87f1adf3061c165c0191e2658256a2855cac9267f179aafb1990c9e918d6452816adf9953f245d005b9d7d8e36a842a60b51e5cf85b2c2072ae397c178535c9985b7700e00c2b7e9ae1844a3b2a788e2daa597ba0ee41e4e9f1f354327db6b18ee229";
        bytes memory proof =
            hex"a4594c5925b162589eabe916cf6a661e8a77a4638fbe26875f25d18239aefc445d04ede901ccbfc3c67b48627b98c1314ba0b5f097064b0a710988d03a1cae0df723e17e27562c96911ca31aca289cbf506c721f0350b1470f84132b3a8e9fed5eadcf1b2821beac0060f85f1690d4777dee60d27d62401d15f6e0ff62f68e8a9652410e0767a6a0d367d957fd24339e6e696bdbc3b49366702660861c6e371891e2610f162b73a04a4acc02673b22e9e6047b6546cabeef4eed7be295d13852bbdcf7fb01352e04116a1476f69fae1969e8093dce2b3156e25298341b8a4f9ce9f2024e22a97a408b7d6400f8076d2fe47e0eed879c216390169cdad60dfed08e749b63";

        (bool success,) = attestation.verifyAndAttestWithZKProof(output, ZkCoProcessorType.Succinct, proof);

        assertTrue(success);
    }

    function testSP1PlonkVerification() public {
        ISP1Verifier sp1PlonkVerifier = ISP1Verifier(setupSp1Plonk.setup());

        vm.prank(admin);
        attestation.setZkConfiguration(
            ZkCoProcessorType.Succinct,
            ZkCoProcessorConfig({latestDcapProgramIdentifier: sp1DcapVkey, defaultZkVerifier: address(sp1PlonkVerifier)})
        );

        bytes memory output =
            hex"02550004810000000790c06f000000040102000000000000000000000000009790d89a10210ec6968a773cee2ca05b5aa97309f36727a968527be4606fc19e6f73acce350946c9d46a9bf7a63f843000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000080e702060000000000f2dd2696f69b950645832bdc095ffd11247eeff687eeacdb57a58d2ddb9a9f94fea40c961e19460c00ffa31420ecbc180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000998204508d58dcbfebe5e11c48669f7a921ac2da744dfb7d014ecdff2acdff1c9f665fdad52aadacf296a1df9909eb2383d100224f1716aeb431f7cb3cf028197dbd872487f27b0f6329ab17647dc9953c7014109818634f879e6550bc60f93eecfc42ff4d49278bfdbb0c77e570f4490cff10a2ee1ac11fbd2c2b49fa6cfa3cf1a1cb755c72522dd8a689e9d47906a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000278e753482976c8a7351fe2113609c7350d491cdae3d449eefc202fa41b2ad6840239cc2ba084c2d594b4e6dabeae0fcbf71c96daf0d0c9ecf0e9810c04579000000000067b006b4d13640a487f29bfe9f18245f06947322bc225541c05b27da6c65a17ff486b948a7fa01fc7a25a72b367cd8bd6aed0bb37108920a3292f557465b91fac3a68eb10fa74a3f32c80b978c8ad671395dabf24283eef9091bc3919fd39b9915a87f1adf3061c165c0191e2658256a2855cac9267f179aafb1990c9e918d6452816adf9953f245d005b9d7d8e36a842a60b51e5cf85b2c2072ae397c178535c9985b7700e00c2b7e9ae1844a3b2a788e2daa597ba0ee41e4e9f1f354327db6b18ee229";
        bytes memory proof =
            hex"d4e8ecd22ccf73c2786299f998c9a9a93f02b328bbc976becc0f6d91eb0525eddf92431f1701383a88ad9560a25283a20c831ac42c9e67f66adbbff5df2107e417cd8131226a49acd986b1b1289a507e59848d8d330f94daf58b749148d7d8699745c1300e1d5f5b270693f4de29f9b89189a5ed9bc9faf73517602781309f9b93b432b6181550f1208f5616431024f9ca054ec99d3f4e6077aafbc98573fe59db7ef5062f618c1b87345521c1e4dab8e1b8c5f75767af3c14beef98228b053ca0ea526d0436d5034336abb0470cb8eed53dc6e78ffb5f52ee222a5bb7221a682aede9af2e7bcdce86688de9d5a505ed07ed13ff4ad4155d92cd3ea42093288ee858b81b02f61efd2a1a3d0acedbf2430ef715dc556e738295037821e31108750b07ed082f12ece7caaed146d7e2524d355de9eea9382707d9293bb102319895494d197315e90857e6b4e7e20d1adc63c1efbfb992bd0cf17cb5b08c56cbbaefc11380741157dc9990fa5938f67897eb32001adb0efde584795ba946b361f3fe744af0a2112d4456ed0f7de2149d28db16c4249fbd393c5f033930357fef35d2f71d18e11c8af63e325a89e536a5c83a8f548c8f58000d72139eeee72a4c460b497c6e290e4995493f94840786bcea58a0a397288371bd1328ac0813d90e119a79deb91a050c322ec98457572ea5bccad2d4ef482e2a87b90e561de95d810fc05e8f58800716391d656aca78351bfe575dbd6728e3907763e0ed11c0523cb5ac65d0b8cd1aa3d6051ae67dd20d1c85cec01bf9c55e894d51e5fba707a1c4dce1272c526900e937d6ffa0e9742c46627e3586b273bd0fb618c204f07c621b5707d7cf34c1250d90d81489b2e91ec911591d33082f4bf207ea5ccdaba056adff15b190a2d5057309c9bf4b0efcb6514846b640f690bac209f8bc9c8d8756a65c49cee9d53518d7517bb8970221235f47a803ea6121c26207d834bc6a50e27a368d5fabdc011490c1df69d6250070210ff249476f866646869ccd5a3edd3e1271f77793a900068eadd79202dfdf103cbb031cf23b43d60ed294882668cbfbe1392f35103dea2d3992599591e90e81d94d0740fa344f42bc1fbc2198a5a3e3704e671f753926132e7030502e3c2fb0f405b0240b414a834f54080a5f14ce1e58f4afecd869e00c39abcf36a4646dc53d214ed87c96f59e17127f8be6cef76bc07b2db1a4a95a";

        (bool success,) = attestation.verifyAndAttestWithZKProof(output, ZkCoProcessorType.Succinct, proof);

        assertTrue(success);
    }
}
