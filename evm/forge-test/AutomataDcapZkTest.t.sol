// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "./utils/PCCSSetupBase.sol";
import "./utils/RiscZeroSetup.sol";
import {Groth16Setup} from "./utils/succinct/Groth16Setup.sol";
import {PlonkSetup} from "./utils/succinct/PlonkSetup.sol";
import {ISP1Verifier} from "@sp1-contracts/ISP1Verifier.sol";

import "../contracts/PCCSRouter.sol";
import "../contracts/AutomataDcapAttestationFee.sol";
import "../contracts/verifiers/V4QuoteVerifier.sol";

contract AutomataDcapZkTest is PCCSSetupBase, RiscZeroSetup {
    AutomataDcapAttestationFee attestation;
    V4QuoteVerifier quoteVerifier;
    PCCSRouter pccsRouter;

    Groth16Setup setupSp1Groth16 = new Groth16Setup();
    PlonkSetup setupSp1Plonk = new PlonkSetup();

    bytes32 riscZeroImageId = vm.envBytes32("DCAP_RISCZERO_IMAGE_ID");
    bytes32 sp1DcapVkey = vm.envBytes32("DCAP_SP1_VKEY");

    bytes constant sampleQuote =
        hex"";

    function setUp() public override {
        // comment this line out if you are replacing sampleQuote with your own
        // this line is needed to bypass expiry reverts for stale quotes
        vm.warp(1749095100); // pinned June 5th, 2025, 3:45am UTC

        super.setUp();

        setUpRiscZero();
        vm.startPrank(admin);

        pccsRouter = setupPccsRouter(admin);
        
        pcsDaoUpserts();
        
        enclaveIdDao.grantRoles(
            admin,
            enclaveIdDao.ATTESTER_ROLE()
        );
        qeIdDaoUpsert(4, "/forge-test/assets/0625/qe_td.json");

        fmspcTcbDao.grantRoles(
            admin,
            fmspcTcbDao.ATTESTER_ROLE()
        );
        fmspcTcbDaoUpsert("/forge-test/assets/0625/tcbinfov3_00806f050000.json");
        tcbEvalDaoUpsert("/forge-test/assets/0625/tdxtcbeval.json");

        attestation = new AutomataDcapAttestationFee(admin);
        quoteVerifier = new V4QuoteVerifier(P256_VERIFIER, address(pccsRouter));
        attestation.setQuoteVerifier(address(quoteVerifier));

        vm.stopPrank();
    }

    function testRiscZeroGroth16Verification() public {
        vm.prank(admin);
        attestation.setZkConfiguration(
            ZkCoProcessorType.RiscZero,
            ZkCoProcessorConfig({latestDcapProgramIdentifier: riscZeroImageId, defaultZkVerifier: address(riscZeroVerifier)})
        );

        bytes memory journal =
            hex"03b3000400020400806f05000004010700000000000000000000000000ffc97a88587660fb04e1f7c851300c96ae0b5a463ac46d035d16c2d9f36d0ed1d23775bcbd27deb219e3a3cc2802389500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000e700060000000000935be7742dd89c6a4df6dba8353d89041ae0f052beef993b1e7f4524d3bc57650df20e5582158352e1240b3f1fed55da000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000e494e54454c2d53412d3030393630000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e494e54454c2d53412d3030393832000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e494e54454c2d53412d303039383600000000000000000000000000000000000000000000684112bcfc0e9516fd61852b166d70295dbaef5128d5c4b963350becb43935b6a231aac1a7fa01fc7a25a72b367cd8bd6aed0bb37108920a3292f557465b91fac3a68eb10fa74a3f32c80b978c8ad671395dabf24283eef9091bc3919fd39b9915a87f1a5c939ffcb58648463f420bffe0c03e3580331c42fc4d48dbe05ae881cb4b1c1188b0758c525b2f28ee1896907de49511ffb1d919b04bd65b91943be6ebb0a5fe8476fa44b3f6223eed544e8908e9b0122afd8ef25db00eee78e8a850c51cf8a0";
        bytes memory seal =
            hex"f536085a08a8ffc6022767bbc15710c8cd5bf13123dd4e71833cf7d59b3c876529a8c91e049517a895391710cfb263e81a94e85613739dda3d28a3b5197339e72b7644692e31f0ad0956efbb237fba243022a0bf4c9a1a3d067015b75f3d3e5f7a99b1a3123b5363ebbecfe11470e090149c0f67ea28e1255a718ed66c3d1e7b64fdcdbc1d4f7da83e62c6d9ac0aeb51af688c9a3c75fbde8b3bfbac7b077c751360014516709c619e79a17001ad3c086ea83fa4b7391d87ad2ff912fc636960a5b76d5f265b5b12c1abeb34841c46a3e3cf8a43016f892199083be4e76fb16454670da02e9a670a1d7e495c747752a083b94aae6b7002c5f34371cc46a18e37abaf3281";

        (bool success,) =
            attestation.verifyAndAttestWithZKProof(journal, ZkCoProcessorType.RiscZero, seal);

        assertTrue(success);
    }

    function testSP1Groth16Verification() public {
        ISP1Verifier sp1Groth16Verifier = ISP1Verifier(setupSp1Groth16.setup());

        vm.prank(admin);
        attestation.setZkConfiguration(
            ZkCoProcessorType.Succinct,
            ZkCoProcessorConfig({latestDcapProgramIdentifier: sp1DcapVkey, defaultZkVerifier: address(sp1Groth16Verifier)})
        );

        bytes memory output =
            hex"03b3000400020400806f05000004010700000000000000000000000000ffc97a88587660fb04e1f7c851300c96ae0b5a463ac46d035d16c2d9f36d0ed1d23775bcbd27deb219e3a3cc2802389500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000e700060000000000935be7742dd89c6a4df6dba8353d89041ae0f052beef993b1e7f4524d3bc57650df20e5582158352e1240b3f1fed55da000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000e494e54454c2d53412d3030393630000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e494e54454c2d53412d3030393832000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e494e54454c2d53412d303039383600000000000000000000000000000000000000000000684112bcfc0e9516fd61852b166d70295dbaef5128d5c4b963350becb43935b6a231aac1a7fa01fc7a25a72b367cd8bd6aed0bb37108920a3292f557465b91fac3a68eb10fa74a3f32c80b978c8ad671395dabf24283eef9091bc3919fd39b9915a87f1a5c939ffcb58648463f420bffe0c03e3580331c42fc4d48dbe05ae881cb4b1c1188b0758c525b2f28ee1896907de49511ffb1d919b04bd65b91943be6ebb0a5fe8476fa44b3f6223eed544e8908e9b0122afd8ef25db00eee78e8a850c51cf8a0";
        bytes memory proof =
            hex"a4594c592964967d0e4b44e8152644f7edd6de876286c73d60dade4930f0838b8f8a9aed2875e447bdda742c72455e01e935f8220ceacba81d1853fd42a378123a1571352e573058aef339c69700ce5050ee72e5a96db86e976e2ebdc394c03ba67e8d6e05fd29dcf9b9730aaa52bf52f86e0fd149b8c11fca8f8ef4898ea3b44344dad9193a10222a1e522396a4840177394815ee5602b224f26e513b9b058f02c830540534dc8cf0d328def205d3bb7b8289ab8680f764aa1f04e01dbeb257593bae5d24f0f59e9ad1bf8cba1b95acb1bcf8a8c0331240269920fa23ada70249ad1a901f4d66a45ea74023d09db71c895ce42248e0e9d98bab168f26f8cfb453e4897f";

        (bool success,) = attestation.verifyAndAttestWithZKProof(output, ZkCoProcessorType.Succinct, proof);

        assertTrue(success);
    }

    function testSP1PlonkVerification() public {
        ISP1Verifier sp1PlonkVerifier = ISP1Verifier(setupSp1Plonk.setup());

        vm.prank(admin);
        attestation.setZkConfiguration(
            ZkCoProcessorType.Succinct,
            ZkCoProcessorConfig({latestDcapProgramIdentifier: sp1DcapVkey, defaultZkVerifier: address(sp1PlonkVerifier)})
        );

        bytes memory output =
            hex"03b3000400020400806f05000004010700000000000000000000000000ffc97a88587660fb04e1f7c851300c96ae0b5a463ac46d035d16c2d9f36d0ed1d23775bcbd27deb219e3a3cc2802389500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000e700060000000000935be7742dd89c6a4df6dba8353d89041ae0f052beef993b1e7f4524d3bc57650df20e5582158352e1240b3f1fed55da000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000e494e54454c2d53412d3030393630000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e494e54454c2d53412d3030393832000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e494e54454c2d53412d303039383600000000000000000000000000000000000000000000684112bcfc0e9516fd61852b166d70295dbaef5128d5c4b963350becb43935b6a231aac1a7fa01fc7a25a72b367cd8bd6aed0bb37108920a3292f557465b91fac3a68eb10fa74a3f32c80b978c8ad671395dabf24283eef9091bc3919fd39b9915a87f1a5c939ffcb58648463f420bffe0c03e3580331c42fc4d48dbe05ae881cb4b1c1188b0758c525b2f28ee1896907de49511ffb1d919b04bd65b91943be6ebb0a5fe8476fa44b3f6223eed544e8908e9b0122afd8ef25db00eee78e8a850c51cf8a0";
        bytes memory proof =
            hex"d4e8ecd22e1f658599eccfeaf49cc01b6efab88d7b9d5f308a6bdaf0df1274882aa04dc8243e15575e424b13afd8978716d8223207f4e678f37d33a5b365fc00b92a985004f893a0e6a6b90bc2a1bd4b664f3bc81a60e8580abdfde1a5929236d222b28c21a4bd845330255731743b48fbdb78d4a3fd4ba9c141af2601579a1c10a4d9aa2e038f1ea3c1e59d135e6c70a2808a588dcdbdf924574cbc0a30d9f4d2207d7a07573b6e3a7ae766ca3240e75513a693fd74c0d2c6e29829b61799a4c8a785c7081b26d86e4587bef5500ac43247c50aabf72ae6e172b642485f09c362d70ece0363347c6a591daa7f872dc9d91c987da1cdeec5c7a523b50d431df4c273a8ed2197e641d53bcebc19ae5db39e1ec6f2e56d5cb993d690e127e8e7f53e0e9230216fc7f70fd8ae0fad81c69581a578461804ceb4a73b4a9d1494c28712ee26022c7f73b30445630dc757e21d3172423e43859bb51228ff48e04b7e48aa0a38ec0834ec4eac0c45bc8aa8e4665a0d2b4e9b6d51bb47cb772519c3184d6b3255a62fec28c25ed60cd480ac17786ef470e05bcb8e64c8efb59ab7239aba75f3c3582059e6d0095a41fcd4b689f2549e8bfd1b68cfc7743a25e7cb42a6ed1fb67ab10884f1cca0b4bcbcf1f460e68aa1f27550d1004fd38005c4d90101994d5ec6b72c861940393e07f7c456fa181dd714fa30ef2528d3dcfc91e1bcefcf8fae828e0c099c9dfcd2784f7c5bd3acfdc5e206802a0960fde53b8b2830ba04efce70371d2401043a28eebef8393339a530ad8d096ce5f3258b4a5e23a08d4f2742d50b1fa0568d67bfcd877962fc5820cf0c45b21c043dfbd844c46deca3d08a6f800e2d12afef178beef7e313d1516c56785f3b99230389e44c0556f8a2488912c0f01aaa9bb1c878732e0171316fcf3b7ccd3a73a5e53aaaa7e450e730eb6bb3eef821a6de66cb17641263f3882658e507b8707c4f9d2354800c21e2c277cdc180d3239926ac414f740f44b6e3b1104443ab3b59914467fa72ac325435dec17c0f3c24f7a965c00ca8ae923f83ec45748b2cd225a56236be68a64f7e4e6994c210011195ad3bb7e019a59621c1ac73cf2a344e43b3899ab3f05365edbb5761ead76816a6f19c0aaf1223315ed8ea9083eb75a89fff2f55e92a4115cfb56bd1c2d3bd2c9ac4db8a5c0b2ceb5a051ac5b7b6631912541d49b35b01aa9730cd6277df1c";

        (bool success,) = attestation.verifyAndAttestWithZKProof(output, ZkCoProcessorType.Succinct, proof);

        assertTrue(success);
    }
}
