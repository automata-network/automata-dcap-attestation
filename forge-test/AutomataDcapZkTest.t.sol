// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "./utils/PCCSSetupBase.sol";
import "./utils/RiscZeroSetup.sol";
import {Groth16Setup} from "./utils/succinct/Groth16Setup.sol";
import {PlonkSetup} from "./utils/succinct/PlonkSetup.sol";
import {ISP1Verifier} from "@sp1-contracts/ISP1Verifier.sol";

import "../contracts/PCCSRouter.sol";
import "../contracts/AutomataDcapAttestationFee.sol";
import "../contracts/verifiers/V4QuoteVerifier.sol";

contract AutomataDcapZkTest is PCCSSetupBase, RiscZeroSetup {

    AutomataDcapAttestationFee attestation;
    V4QuoteVerifier quoteVerifier;
    PCCSRouter pccsRouter;

    Groth16Setup setupSp1Groth16 = new Groth16Setup();
    PlonkSetup setupSp1Plonk = new PlonkSetup();

    function setUp() public override {
        super.setUp();
        setUpRiscZero();

        vm.startPrank(admin);

        // setup pccs
        pccsRouter = setupPccsRouter();
        pcsDaoUpserts();

        vm.warp(1739589300);
        qeIdDaoUpsert(4, "/forge-test/assets/0225/qe_td.json");
        fmspcTcbDaoUpsert("/forge-test/assets/0225/tcbinfo.json");
        pcsDao.upsertPckCrl(CA.PLATFORM, pckCrl);

        attestation = new AutomataDcapAttestationFee();
        quoteVerifier = new V4QuoteVerifier(P256_VERIFIER, address(pccsRouter));
        attestation.setQuoteVerifier(address(quoteVerifier));

        vm.stopPrank();
    }

    bytes constant sampleQuote = hex"";
    
    bytes constant pckCrl = hex"30820a6230820a08020101300a06082a8648ce3d04030230703122302006035504030c19496e74656c205347582050434b20506c6174666f726d204341311a3018060355040a0c11496e74656c20436f72706f726174696f6e3114301206035504070c0b53616e746120436c617261310b300906035504080c024341310b3009060355040613025553170d3235303231353032313635335a170d3235303331373032313635335a30820934303302146fc34e5023e728923435d61aa4b83c618166ad35170d3235303231353032313635335a300c300a0603551d1504030a01013034021500efae6e9715fca13b87e333e8261ed6d990a926ad170d3235303231353032313635335a300c300a0603551d1504030a01013034021500fd608648629cba73078b4d492f4b3ea741ad08cd170d3235303231353032313635335a300c300a0603551d1504030a010130340215008af924184e1d5afddd73c3d63a12f5e8b5737e56170d3235303231353032313635335a300c300a0603551d1504030a01013034021500b1257978cfa9ccdd0759abf8c5ca72fae3a78a9b170d3235303231353032313635335a300c300a0603551d1504030a01013033021474fea614a972be0e2843f2059835811ed872f9b3170d3235303231353032313635335a300c300a0603551d1504030a01013034021500f9c4ef56b3ab48d577e108baedf4bf88014214b9170d3235303231353032313635335a300c300a0603551d1504030a010130330214071de0778f9e5fc4f2878f30d6b07c9a30e6b30b170d3235303231353032313635335a300c300a0603551d1504030a01013034021500cde2424f972cea94ff239937f4d80c25029dd60b170d3235303231353032313635335a300c300a0603551d1504030a0101303302146c3319e5109b64507d3cf1132ce00349ef527319170d3235303231353032313635335a300c300a0603551d1504030a01013034021500df08d756b66a7497f43b5bb58ada04d3f4f7a937170d3235303231353032313635335a300c300a0603551d1504030a01013033021428af485b6cf67e409a39d5cb5aee4598f7a8fa7b170d3235303231353032313635335a300c300a0603551d1504030a01013034021500fb8b2daec092cada8aa9bc4ff2f1c20d0346668c170d3235303231353032313635335a300c300a0603551d1504030a01013034021500cd4850ac52bdcc69a6a6f058c8bc57bbd0b5f864170d3235303231353032313635335a300c300a0603551d1504030a01013034021500994dd3666f5275fb805f95dd02bd50cb2679d8ad170d3235303231353032313635335a300c300a0603551d1504030a0101303302140702136900252274d9035eedf5457462fad0ef4c170d3235303231353032313635335a300c300a0603551d1504030a01013033021461f2bf73e39b4e04aa27d801bd73d24319b5bf80170d3235303231353032313635335a300c300a0603551d1504030a0101303302143992be851b96902eff38959e6c2eff1b0651a4b5170d3235303231353032313635335a300c300a0603551d1504030a0101303302140fda43a00b68ea79b7c2deaeac0b498bdfb2af90170d3235303231353032313635335a300c300a0603551d1504030a010130330214639f139a5040fdcff191e8a4fb1bf086ed603971170d3235303231353032313635335a300c300a0603551d1504030a01013034021500959d533f9249dc1e513544cdc830bf19b7f1f301170d3235303231353032313635335a300c300a0603551d1504030a0101303302147ae37748a9f912f4c63ba7ab07c593ce1d1d1181170d3235303231353032313635335a300c300a0603551d1504030a01013033021413884b33269938c195aa170fca75da177538df0b170d3235303231353032313635335a300c300a0603551d1504030a0101303402150085d3c9381b77a7e04d119c9e5ad6749ff3ffab87170d3235303231353032313635335a300c300a0603551d1504030a0101303402150093887ca4411e7a923bd1fed2819b2949f201b5b4170d3235303231353032313635335a300c300a0603551d1504030a0101303302142498dc6283930996fd8bf23a37acbe26a3bed457170d3235303231353032313635335a300c300a0603551d1504030a010130340215008a66f1a749488667689cc3903ac54c662b712e73170d3235303231353032313635335a300c300a0603551d1504030a01013034021500afc13610bdd36cb7985d106481a880d3a01fda07170d3235303231353032313635335a300c300a0603551d1504030a01013034021500efe04b2c33d036aac96ca673bf1e9a47b64d5cbb170d3235303231353032313635335a300c300a0603551d1504030a0101303402150083d9ac8d8bb509d1c6c809ad712e8430559ed7f3170d3235303231353032313635335a300c300a0603551d1504030a0101303302147931fd50b5071c1bbfc5b7b6ded8b45b9d8b8529170d3235303231353032313635335a300c300a0603551d1504030a0101303302141fa20e2970bde5d57f7b8ddf8339484e1f1d0823170d3235303231353032313635335a300c300a0603551d1504030a0101303302141e87b2c3b32d8d23e411cef34197b95af0c8adf5170d3235303231353032313635335a300c300a0603551d1504030a010130340215009afd2ee90a473550a167d996911437c7502d1f09170d3235303231353032313635335a300c300a0603551d1504030a0101303302144481b0f11728a13b696d3ea9c770a0b15ec58dda170d3235303231353032313635335a300c300a0603551d1504030a01013034021500a7859f57982ef0e67d37bc8ef2ef5ac835ff1aa9170d3235303231353032313635335a300c300a0603551d1504030a010130340215009d67753b81e47090aea763fbec4c4549bcdb9933170d3235303231353032313635335a300c300a0603551d1504030a01013033021434bfbb7a1d9c568147e118b614f7b76ed3ef68df170d3235303231353032313635335a300c300a0603551d1504030a0101303302142c3cc6fe9279db1516d5ce39f2a898cda5a175e1170d3235303231353032313635335a300c300a0603551d1504030a010130330214717948687509234be979e4b7dce6f31bef64b68c170d3235303231353032313635335a300c300a0603551d1504030a010130340215009d76ef2c39c136e8658b6e7396b1d7445a27631f170d3235303231353032313635335a300c300a0603551d1504030a01013034021500c3e025fca995f36f59b48467939e3e34e6361a6f170d3235303231353032313635335a300c300a0603551d1504030a010130340215008c5f6b3257da05b17429e2e61ba965d67330606a170d3235303231353032313635335a300c300a0603551d1504030a01013034021500a17c51722ec1e0c3278fe8bdf052059cbec4e648170d3235303231353032313635335a300c300a0603551d1504030a0101a02f302d300a0603551d140403020101301f0603551d23041830168014956f5dcdbd1be1e94049c9d4f433ce01570bde54300a06082a8648ce3d0403020348003045022100a4b92f8d1dc69f4ce73f52e19b54e6a29ea36ada71438f6cfc65db234115f70102204f9911144adcbdf860d48953d65217cfed4fc9ec30804175c05f52fae1093f02";

    function testRiscZeroGroth16Verification() public {
        bytes32 riscZeroImageId = vm.envBytes32("DCAP_RISCZERO_IMAGE_ID");

        vm.prank(admin);
        attestation.setZkConfiguration(
            ZkCoProcessorType.RiscZero,
            ZkCoProcessorConfig({
                dcapProgramIdentifier: riscZeroImageId,
                zkVerifier: address(riscZeroVerifier)
            })
        );

        bytes memory journal = hex"02550004810000000790c06f000000040102000000000000000000000000009790d89a10210ec6968a773cee2ca05b5aa97309f36727a968527be4606fc19e6f73acce350946c9d46a9bf7a63f843000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000080e702060000000000f2dd2696f69b950645832bdc095ffd11247eeff687eeacdb57a58d2ddb9a9f94fea40c961e19460c00ffa31420ecbc180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000998204508d58dcbfebe5e11c48669f7a921ac2da744dfb7d014ecdff2acdff1c9f665fdad52aadacf296a1df9909eb2383d100224f1716aeb431f7cb3cf028197dbd872487f27b0f6329ab17647dc9953c7014109818634f879e6550bc60f93eecfc42ff4d49278bfdbb0c77e570f4490cff10a2ee1ac11fbd2c2b49fa6cfa3cf1a1cb755c72522dd8a689e9d47906a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000278e753482976c8a7351fe2113609c7350d491cdae3d449eefc202fa41b2ad6840239cc2ba084c2d594b4e6dabeae0fcbf71c96daf0d0c9ecf0e9810c04579000000000067b006b4d13640a487f29bfe9f18245f06947322bc225541c05b27da6c65a17ff486b948a7fa01fc7a25a72b367cd8bd6aed0bb37108920a3292f557465b91fac3a68eb10fa74a3f32c80b978c8ad671395dabf24283eef9091bc3919fd39b9915a87f1adf3061c165c0191e2658256a2855cac9267f179aafb1990c9e918d6452816adf9953f245d005b9d7d8e36a842a60b51e5cf85b2c2072ae397c178535c9985b7700e00c2b7e9ae1844a3b2a788e2daa597ba0ee41e4e9f1f354327db6b18ee229";
        bytes memory seal = hex"c101b42b23fb322ca6e39b8d8ccfed0344bd180fe9dd2c6ebefad5fe2eb93fd4eaca591812c5a129383af456f17977fbe6af5d1085897160ec1a316fabd88b041c84998d292cf426d9ad9f239587d359ed4e89652f8f25fd5316884948c17ece285d356b0807ac65be962d112a7d43edd67e1ab84c2c1098e64fb2b04fa1206f409dd8b22accb138740c8c30f038541781df0306a0f7840ba7aec0f30a1c436d38f635ba0ac30ab54e03cc0a005e22f5b4f1205d15793cfcdecdc824820f48467c04d9a9127a23ed5030465e9910b8b23dbe7ebd59f01cf9cf3abcef65ab9e9307adc5121440827b35a095fa837e202ee4c1d69a24927358c311228ffc43dd587d1486df";

        (bool success, bytes memory output) = attestation.verifyAndAttestWithZKProof(
            journal,
            ZkCoProcessorType.RiscZero,
            seal
        );

        assertTrue(success);
    }

    function testSP1Groth16Verification() public {
        ISP1Verifier sp1Groth16Verifier = ISP1Verifier(setupSp1Groth16.setup());

        bytes32 sp1DcapVkey = vm.envBytes32("DCAP_SUCCINCT_VKEY");

        vm.prank(admin);
        attestation.setZkConfiguration(
            ZkCoProcessorType.Succinct,
            ZkCoProcessorConfig({
                dcapProgramIdentifier: sp1DcapVkey,
                zkVerifier: address(sp1Groth16Verifier)
            })
        );

        bytes memory output = hex"02550004810000000790c06f000000040102000000000000000000000000009790d89a10210ec6968a773cee2ca05b5aa97309f36727a968527be4606fc19e6f73acce350946c9d46a9bf7a63f843000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000080e702060000000000f2dd2696f69b950645832bdc095ffd11247eeff687eeacdb57a58d2ddb9a9f94fea40c961e19460c00ffa31420ecbc180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000998204508d58dcbfebe5e11c48669f7a921ac2da744dfb7d014ecdff2acdff1c9f665fdad52aadacf296a1df9909eb2383d100224f1716aeb431f7cb3cf028197dbd872487f27b0f6329ab17647dc9953c7014109818634f879e6550bc60f93eecfc42ff4d49278bfdbb0c77e570f4490cff10a2ee1ac11fbd2c2b49fa6cfa3cf1a1cb755c72522dd8a689e9d47906a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000278e753482976c8a7351fe2113609c7350d491cdae3d449eefc202fa41b2ad6840239cc2ba084c2d594b4e6dabeae0fcbf71c96daf0d0c9ecf0e9810c04579000000000067b006b4d13640a487f29bfe9f18245f06947322bc225541c05b27da6c65a17ff486b948a7fa01fc7a25a72b367cd8bd6aed0bb37108920a3292f557465b91fac3a68eb10fa74a3f32c80b978c8ad671395dabf24283eef9091bc3919fd39b9915a87f1adf3061c165c0191e2658256a2855cac9267f179aafb1990c9e918d6452816adf9953f245d005b9d7d8e36a842a60b51e5cf85b2c2072ae397c178535c9985b7700e00c2b7e9ae1844a3b2a788e2daa597ba0ee41e4e9f1f354327db6b18ee229";
        bytes memory proof = hex"11b6a09d11422844a657d8ac8b2a4d0a1ff61a2124f9da0033bb6485c62792e54a5b1805265589c472b6bc22f1941368a22cad5c29e22fcf14737bb6cde7692e13d1199c2d7697fae2f208f70c7b16f7c69608dedc7e546c7917b6f518f8787287808d22156e3a20c4c1065e588febbaf6cde46c83c34a8458731b29b6f157a2a8929ba018cfae7c24689b534b3c34af2946aa74ba6eb9f297a8b64df593addebc620ede12aa267f324c7ac22875a66b7136e626b5de8bcd8b6b7a9b2c6bf509862c5346221ab13ad8c5a2acf7073ff33a3deeda08be3cc12b6dcb8356316ad0cf6e16b319836213a2e4dbf9406ea7fd554b8b6532a9e71dcbbc4f3110bb64713b074d80";

        (bool success,) = attestation.verifyAndAttestWithZKProof(
            output,
            ZkCoProcessorType.Succinct,
            proof
        );

        assertTrue(success);
    }

    function testSP1Verification() public {
        ISP1Verifier sp1PlonkVerifier = ISP1Verifier(setupSp1Plonk.setup());

        bytes32 sp1DcapVkey = vm.envBytes32("DCAP_SUCCINCT_VKEY");

        vm.prank(admin);
        attestation.setZkConfiguration(
            ZkCoProcessorType.Succinct,
            ZkCoProcessorConfig({
                dcapProgramIdentifier: sp1DcapVkey,
                zkVerifier: address(sp1PlonkVerifier)
            })
        );

        bytes memory output = hex"02550004810000000790c06f000000040102000000000000000000000000009790d89a10210ec6968a773cee2ca05b5aa97309f36727a968527be4606fc19e6f73acce350946c9d46a9bf7a63f843000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000080e702060000000000f2dd2696f69b950645832bdc095ffd11247eeff687eeacdb57a58d2ddb9a9f94fea40c961e19460c00ffa31420ecbc180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000998204508d58dcbfebe5e11c48669f7a921ac2da744dfb7d014ecdff2acdff1c9f665fdad52aadacf296a1df9909eb2383d100224f1716aeb431f7cb3cf028197dbd872487f27b0f6329ab17647dc9953c7014109818634f879e6550bc60f93eecfc42ff4d49278bfdbb0c77e570f4490cff10a2ee1ac11fbd2c2b49fa6cfa3cf1a1cb755c72522dd8a689e9d47906a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000278e753482976c8a7351fe2113609c7350d491cdae3d449eefc202fa41b2ad6840239cc2ba084c2d594b4e6dabeae0fcbf71c96daf0d0c9ecf0e9810c04579000000000067b006b4d13640a487f29bfe9f18245f06947322bc225541c05b27da6c65a17ff486b948a7fa01fc7a25a72b367cd8bd6aed0bb37108920a3292f557465b91fac3a68eb10fa74a3f32c80b978c8ad671395dabf24283eef9091bc3919fd39b9915a87f1adf3061c165c0191e2658256a2855cac9267f179aafb1990c9e918d6452816adf9953f245d005b9d7d8e36a842a60b51e5cf85b2c2072ae397c178535c9985b7700e00c2b7e9ae1844a3b2a788e2daa597ba0ee41e4e9f1f354327db6b18ee229";
        bytes memory proof = hex"1b34fe112e34a9999e06a83fab52760ef1ed63131ed7c56821d0d70acd628789e97a72d603a8cd272c2a8c3c4678e3d75355d12261e7eae7a9a4b0def4345229d2720c5c12a73c7067c30dff13f4bda7b3fdab7f80a12ab21b170f23b703b05d7990fced017bc97c531944d03a110eeb871f371ae705deccf25c977c0dbe0140b5dd302618cee631c22796aa01f963901b669ffdffc234fd94fed55be51a94ed9526400809fb7ced2d04e074e0ec84534e935927d58d831c67ecfbe8db3082d9f49fbd150f1a6b04b187183060d33d7f95d8c2e53204cf8e880cefbd8752cce6fd9b77441ef95be3394e22920ac47b98fb44fad42cd1f0ceb2109bf7f1bb8bbec191cc1a1a505657483861a27c8a606ecc5a7e7c0522ed9899eff316c9eb4b751eb4a57c2fa33509b479a3d3f8ab455914f4a7df00d2c6bccb68163ca280388574f242af0e8be837da3c0cfafd0ff4e266284b0a779b3157a9b8f9817823ce17a1bd70be1ab473109f7ddcc973d674eb400d1ead327151542a0de77a745f12ac96a1091b2bffa63632aecd3e99655be5e7588d63d7250ef34a43e9caa5dc0bd3e0032ae62f1bdbd2920707469f8f4e452ce2ee4a2d127e33c93ce2eaa9ada52aaacb37c12d370d6f00f20006d9ea52928aa607cc6d0d1f55a45773cfb1364752250ccf062b8f867b61a62fb7f8d47100a045b5e6d442c6c4fd55d57b04180fd6409bbad112df53ca93458e8fbd1938333403e9b9699e52f3cd51884308ebf31179fbb56a280db834ecaefdfe87f2348c820fa03086d51b159e1f3dac02188e31ab1f07d21516ba3cbc3f17b10186aecd95f604dc82fa6f3d83af43d8d001662486d131712cac2d902577ea7bd31ceea32fe962f20d23e7c2a9c0069fd5e2d1a4d56aa67208dea72060a34cdcb7c31be36d95366450b6025f3ca1aa05193926ca648707d426bba986d4b7b9b73b7e516a27a56c64e0f0e4df8f7e2f821a0c61c1422f537b1785a3e3e7415c60382085ad58a656e23310de31e750d0d664f07a28af45258e20d3911d59418fa366336606d68b04070b59bae9a7f60dc874ae393c3ea3c2f620bb50a5f05dcac1422460b8baaf4cc87100b2030bf959af17825426e297508b08b0cf47dd72a27b13c802b96b7072824f8e00e50e0daebff8c5bd134e0a039f284789817e5f6c2c77bc969129ce2086b8ffbfaa6d55f3bd039f804c155481e7";

        (bool success,) = attestation.verifyAndAttestWithZKProof(
            output,
            ZkCoProcessorType.Succinct,
            proof
        );

        assertTrue(success);
    }
}